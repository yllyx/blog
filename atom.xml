<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>生活最大的捷径</title>
  
  <subtitle>就是认识到没有捷径后的全力以赴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-29T09:16:19.831Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>kFly</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java 反射</title>
    <link href="http://yoursite.com/2018/10/18/Java-%E5%8F%8D%E5%B0%84/"/>
    <id>http://yoursite.com/2018/10/18/Java-反射/</id>
    <published>2018-10-18T08:03:58.000Z</published>
    <updated>2019-01-29T09:16:19.831Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、反射机制概述"><a href="#一、反射机制概述" class="headerlink" title="一、反射机制概述"></a>一、反射机制概述</h3><p>Java 反射机制是在运行状态中，对于任意一个类，都能够获得这个类的所有属性和方法，对于任意一个对象都能够调用它的任意一个属性和方法。这种在运行时动态的获取信息以及动态调用对象的方法的功能称为 Java 的反射机制。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、反射机制概述&quot;&gt;&lt;a href=&quot;#一、反射机制概述&quot; class=&quot;headerlink&quot; title=&quot;一、反射机制概述&quot;&gt;&lt;/a&gt;一、反射机制概述&lt;/h3&gt;&lt;p&gt;Java 反射机制是在运行状态中，对于任意一个类，都能够获得这个类的所有属性和方法，对于任意
      
    
    </summary>
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="java" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="反射" scheme="http://yoursite.com/tags/%E5%8F%8D%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>Java 拦截器原理和使用</title>
    <link href="http://yoursite.com/2018/10/18/Java-%E6%8B%A6%E6%88%AA%E5%99%A8%E3%80%81%E8%BF%87%E6%BB%A4%E5%99%A8%E5%8E%9F%E7%90%86%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/10/18/Java-拦截器、过滤器原理和使用/</id>
    <published>2018-10-18T06:41:41.000Z</published>
    <updated>2019-01-29T09:16:19.764Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要：本文计划对java 的拦截器的原理进行分析，记录分析过程和拦截器的使用过程。</p></blockquote><h3 id="1-拦截器原理分析"><a href="#1-拦截器原理分析" class="headerlink" title="1 拦截器原理分析"></a>1 拦截器原理分析</h3><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;摘要：本文计划对java 的拦截器的原理进行分析，记录分析过程和拦截器的使用过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-拦截器原理分析&quot;&gt;&lt;a href=&quot;#1-拦截器原理分析&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="java" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/java/"/>
    
    
      <category term="拦截器" scheme="http://yoursite.com/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
      <category term="过滤器" scheme="http://yoursite.com/tags/%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    
  </entry>
  
</feed>
